
Here are directions on how to install RSTS from scratch and to add
packages to a pre-built system.


To install from scratch:

  [0] run the PDP11 simulator


  [1] at the "sim> " prompt, attach a scratch disk and the sysgng disk.
      write protect sysgng.   i set 1MB of ram too.

	sim> att rl0 disk0
	sim> att rl1 rsts_sysgng.dsk
	sim> set rl1 lock
	sim> set cpu 1m
 
      the file "disk0" acts as the scratch disk


  [2] boot the sysgng disk
	sim> b rl1

      you should have "Option: " prompt


  [3] format the scratch disk.  you take the "default" answer to many
	questions by hitting "line-feed" (<lf> or ^J).

	Option: DSK
	<enter date>
	<enter time>

	Disk? RL0
	Pack ID? DISK0
	Pack cluster size? 2
	SATT.SYS base? <lf>
	MFD password? SYSTEM
	MFD cluster size? 16
	Pre-extend directories <no>? <lf>
	PUB, PRI, or SYS? SYS
	Library password? SYSTEM
	Library UFD cluster size? 16
	Date last modified <yes>? <lf>
	New files first <no>? <lf>
	Patterns? 1
	Proceed (Y or N)? Y
	<some error printed>
	Continue with DSKINT? Y
	Patterns? 1
	Proceed (Y or N)? Y


  [4] copy system to scratch disk

	Option: COP
	<date, time again>
	To which disk? RL0

      sim will reboot from scratch disk


  [5] add swapfile / crash dump file to scratch disk

	Option: REF
	<date, time again>
	Disk? RL0
	Clean? N
	REFRESH suboption? CHA
	SWAP.SYS changes? Y
	Size? 256
	Base? <lf>
	SWAP0.SYS changes? <lf>
	SWAP1.SYS changes? <lf>
	SWAP3.SYS changes? <lf>
	OVR.SYS changes? <lf>
	ERR.SYS changes? <lf>
	BUFF.SYS changes? <lf>
	CRASH.SYS changes? Y
	Size? 35
	Base? <lf>
	Other files? <lf>
	REFRESH suboption? <lf>


  [6] install SYSGEN SIL

	Option: INS
	Sil? SYSGEN

      system will reboot


  [7] set defaults for the SYSGEN SIL.   

	Option: DEF
	JOB MAX or SWAP MAX changes? Y
	New JOB MAX? <lf>
	JOB MAX or SWAP MAX changes? 28
	JOB MAX or SWAP MAX changes? <lf>
	Run Time System? RT11
	Error message file? ERR
	Installation name?  <choose a name>
	Table suboption? <lf>
	Crash dump? y
	Magtape labelling default <none>? ANSI
	Preferred clock <L>? <lf>
	Date format <ALPHABETIC>? <lf>
	Time format <AM/PM>? <lf>
	Power fail delay <1>? <lf>


  [8] boot SYSGEN system

	Option: <lf>
	<enter date, time>
	
      the system will print "?Can't find file or account" and prompt with 
      a "." (RT-11's prompt).


  [9] mount the distribution disk (SYSGNG) read-only and copy the files
      from it.

	. MOUNT DL1:SYSGNG/RO
	. R DL1:CREATE.SAV

      after the files are copied the CREATE program will automatically
      run the SYSGEN program.


  [10] answer all the questions that SYSGEN asks, the first main section
       is important because it tells SYSGEN where to get the files and
       patches from:

	Form ?                          #S #    L
	Same system ?                   #Y #    <lf>
	Distribution medium ?           #DL#    <lf>
	Output medium ?                 #DL#    SY
	Delete files ?                  #Y #    <lf>
	LP for SYSGEN ?                 *Y *    N
	Generate monitor ?              #Y #    <lf>
	Monitor name ?                  #RSTS#  <lf>
	Monitor patching ?              #??#    YES
	Patch file medium ?             #DL#    <lf>
	Pack ID ?                       #??#    PATCHG
	Patch file name ?               #$MONITR.CMD#   
	Generate BASIC-PLUS ?           #Y #    <lf>
	BASIC-PLUS RTS name ?           #BASIC# <lf>
	BASIC-PLUS patching ?           #??#    YES
	Patch file medium ?             #Identical to monitor#  <lf>
	Patch file name ?               #$BASIC.CMD#    <lf>
	RSX as default RTS ?            #NO#    <lf>

       the rest of the questions you can just hit <lf> at (i.e.
       take the default).  eventually you will return to the RT-11
       "." prompt.


  [11] build the system with SYSBAT

	.R SYSBAT

	<output>

	MOUNT AX-D527G-BC ON A DISK DRIVE

	READY AND WRITE PROTECT THE DRIVE

	Mount DL:"SYSGNG"-write locked
	Unit ? DL1

	<more output as PIP, LINK, MACRO, LIBR, and SILUS are run...>

	MOUNT THE MONITOR PATCH FILE DISK "PATCHG" ON A DISK DRIVE

	READY AND WRITE PROTECT THE DRIVE

	Mount DL:"PATCHG"-write locked
	Unit ? 

	<break to simulator with ^E>

	sim> att rl1 rsts_patchg.dsk
	sim> c
	DL1


       at this point the system generate a lot of output while it
       patches the monitor and BASIC-PLUS.   It will finish with
       "Batch job completed."


  [12] shutdown SYSGEN system

	R UTILTY.SAV
	*NO LOGINS
	*SHUTUP


  [13] install new RSTS SIL

	Options: INS
	Sil <SYSGEN>? RSTS

  [14] set defaults on RSTS SIL

	Options: DEF
	JOB MAX or SWAP MAX changes? Y
	New JOB MAX? <lf>
	New SWAP MAX? 31
	JOB MAX or SWAP MAX changes? <lf>
	Run Time System? BASIC
	Error message file? ERR
	Installation name?  <choose a name>
	Table suboption? <lf>
	Crash dump? y
	Magtape labelling default <none>? ANSI
	Preferred clock <L>? <lf>
	Date format <ALPHABETIC>? <lf>
	Time format <AM/PM>? <lf>
	Power fail delay <1>? <lf>


  [15] attach SYSL1G to RL2 (PATCHG is still on DL1), then boot.

	<hit ^E to break to sim>
	Simulation stopped, PC: 034534 (WAIT)
	sim> att rl2 rsts_sysl1g.dsk
	sim> set rl2 lock
	sim> b rl0

 
  [16] start timesharing

	Options: <lf>
	<date,time>

    the system will come in basic with the "Ready" prompt:

	?Can't find file or account
	?Program lost-Sorry
	
	Ready


  [17] mount SYSL1G and PATCHG

	MOUNT DL1:PATCHG/RO
	MOUNT DL2:SYSL1G/RO


  [18] install the basic system using BUILD.BAS

	RUN DL2:$BUILD
	BUILD   V7.0-07 RSTS V7.0-07 llama
	System Build <No> ? YES
	Source Input Device <DL2:> ? 
	Library Output Device <SY:> ? 
	Target System Device <SY0:> ? 
	Library Account <[1,2]> ? 

	*** Copying file DL2:[1,2]BUILD.CTL to BLD01.TMP ***

	Locate logical 'LB:' on <SY:[1,1]> ? 
	Function (Build/Patch, Patch, Build) <Build/Patch> ? 
	Patch file input location <SY:[200,200]> ? DL1:[1,2]
	Save patched sources <No> ? 
	Run-Time System <BASIC > ? 
	Locate ERROR Package on <SY:[1,2]> ? 
	Additional Control File is <None> ? 

       At this point BUILD will start loading, patching, and installing
       DEC BASIC-PLUS CUSPS.   It will eventually finish with 
       "!*** BUILD Complete ***"


  [19] shut the system down

	RUN $SHUTUP
	Minutes until system shutdown (0-99) <5>?  0

       you now have a minimal system installed (e.g. like rl0.minsys).


  [20] (optional) To run more than two jobs you need to add swap space
       to the system.   To do this first choose where you want to put
       the swap (either on the system disk you just built, or on another
       drive).   

       To put extra swap on the system drive:
	[a] Option: REF
	[b] <date, time>
	[c] Disk? DL0
	[d] don't clean, chose suboption "CHA"
	[e] go through prompts and change size of "SWAP0.SYS" to a value
		(e.g. 1024 blocks)
	[f] boot your system
	[g] edit "$RTS.CMD" using TECO
	[h] add a line "FORCE KB0: ADD SWAPFILE 0 DL0:SWAP0" to the line
		after "RUN $UTILTY"

       To put extra swap on another drive, you first have to have a 
       valid drive file (use Option "DSK" to format one).   Then follow
       the above procedure (with the correct disk name) to add a SWAP0.SYS 
       file to the drive and configure it in your system.  In addition,
       you will have to edit $START.CTL to mount the new disk before
       RTS.CMD is run.   For example, if added a DL1 disk with a label
       of "PRIVAT" you would put the following line at the top of 
       $START.CTL:

	MOUNT DL1:PRIVAT

------------------------------------------------------------------------------

Once you have a minimal system, you can install other packages as
desired.   The following packages are available on the distribution
media:

On SYSGNG:
	
	MAINT .CTL = used to rebuild RSX (not all that useful)
	RSX   .CTL = the RSX runtime system
	SORT  .CTL = SORT (patches fail since we don't have RMS distribution)
	TECO  .CTL = the TECO editor (SQU,TYPE,TECKBM...)

On SYSL1G:
	BUILD .CTL = the basic system -- this should already be installed
	SPLER .CTL = the spooling programs (QUE, OPSER, BATCH, etc.)
	UNSUPP.CTL = unsupported programs (DSKDMP, STATUS, DEMO55)
	BIGPRG.CTL = "big" programs (RUNOFF,FIT,FLINT,PMDUMP,BPCREF,MAKSIL)
	BACKUP.CTL = the BACKUP package
	DEVTST.CTL = device testing
	HELP  .CTL = the help files


To install a package use the $BUILD program.   For example, if 
SYSL1G is mounted on DL2: and PATCHG is mounted on DL3: then
to install the HELP package you could do:

	Ready

	SY/D

	Disk Structure:
	Disk    Open    Free    Cluster Errors  Name    Comments
	DL0       2     3480       2      0     SYSTEM  Pub, DLW
	DL1       1     4332       2      0     PRIVAT  Pri, DLW
	DL2       0     1422       1      0     SYSL1G  Pri, R-O
	DL3       0     3800       1      0     PATCHG  Pri, R-O, DLW

	Ready

	RUN $BUILD
	BUILD   V7.0-07B        RSTS V7.0-07 llama
	System Build <No> ? 
	Source Input Device <SY:> ? DL2:
	Library Output Device <SY:> ? 
	Target System Device <SY0:> ? 
	Library Account <[1,2]> ? 
	Control File is ? HELP

	*** Copying file DL2:[1,2]HELP.CTL to BLD02.TMP ***

	Function (Build/Patch, Patch, Build) <Build/Patch> ? 
	Patch file input location <SY:[200,200]> ? DL3:[1,2]
	Run-Time System <BASIC > ? 
	Locate HELP Package on <SY:[1,2]> ? SY:[1,8]

	%Can't find file or account - SY:[1,8]
	Attempt to create account SY:[1,8] <No>? YES
	Account SY:[1,8] created with your password
	Additional Control File is <None> ? 


the build program would then go and build the HELP package.


