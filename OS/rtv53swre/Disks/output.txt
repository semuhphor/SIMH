

                        RT-11 V05.03 RELEASE NOTES ADDENDA
                        ===================================


THE FOLLOWING LISTS NEW GENERAL FEATURES.  IT ALSO LISTS RESTRICTIONS, GENERAL
INFORMATION, SOFTWARE CORRECTIONS,  AND  DOCUMENTATION  CHANGES  AND ADDITIONS
FINALIZED AFTER THE PRINTING OF THE RT-11 V5.3 RELEASE NOTES.


                                GENERAL FEATURES
                                ----------------

VERSION 5.3 PROVIDES SUPPORT FOR THE FOLLOWING NEW FEATURES AND DEVICES:


        O NEW UNSUPPORTED NATIVE TRANSFER UTILITY (TRANSFER)
        O BAD BLOCK REPLACEMENT SUPPORT FOR MSCP (DU) DEVICES
        O MULTIPLE PORT BOOTING FOR MSCP (DU) DEVICES
        O SUPPORT FOR SPFUN 376 AND 377 (ABSOLUTE WRITE/READ WITH MSCP 
          BAD BLOCK REPLACEMENT) FOR DU DEVICES
        O BAD BLOCK SUPPORT FOR THE BUP UTILITY
        O NEW SYSTEM MACROS: .CKXX, .DREST, .DRPTR, AND .DRSPF
        O NEW SYSTEM SUBROUTINES: CALL$F, IGTDUS, JREAD, AND JWRITE
        O NEW COMMAND FILE TO BACKUP AND BUILD BOOTABLE MAGTAPES (MTB.COM)
        O NEW BEGINNERS TUTORIAL MANUAL (RT-11 FOR BEGINNERS)
        O SUPPORT FOR THE NEW PDP-11/83 Q-BUS PROCESSOR
        O SUPPORT FOR APPROX. 532 THOUSAND (8 X 65K) BLOCKS ON THE RA81 DISK
        O SUPPORT FOR THE LVP-16 GRAPHICS PLOTTER/PRINTER
        O SUPPORT FOR THE NEW RD31 HARD DISK AS A 10M BYTE SYSTEM 
          AND DATA DEVICE
        O SUPPORT FOR ONE ADDITIONAL RD5X HARD DISK DEVICE ON PROFESSIONAL
          SERIES PROCESSORS USING THE NEW EXPANDER BOX



                                GENERAL RESTRICTIONS
                                --------------------

    O SMOOTH SCREEN SCROLLING IS NOT SUPPORTED FOR THE PROFESSIONAL 380. DO
      NOT ISSUE THE COMMAND SETUP SMOOTH IF USING A PROFESSIONAL 380.

    O SET AN LA210 PRINTER TO AUTO MODE BEFORE ISSUING IT SETUP COMMANDS.

    O SUPPORT FOR DU MULTIPLE PORT BOOTING REQUIRES THE V5.3 DU HANDLER
      RUNNING UNDER A V5.3 MONITOR.

    O .READX, .WRITX, IREADX, AND IWRITX  REQUESTS AND SUBROUTINES PERFORM I/O
      CONTIGUOUSLY  FROM  THE SPECIFIED BUFFER STARTING ADDRESS. IF THE SPECI-
      FIED  BUFFER  SPANS  A DISCONTIGUOUSLY MAPPED PAGE BOUNDARY, I/O IS PER-
      FORMED OUTSIDE OF THE MAPPED BUFFER, AND NO ERROR MESSAGE IS RETURNED.

    O UNIT NUMBERS OTHER THAN 0 ARE NOT SUPPORTED FOR TT DEVICES. I/O REQUESTS
      TO TTN, WHERE N IS OTHER THAN 0, RETURN A HARD ERROR.

    O UNDER  THE  XM  MONITOR, THE DU HANDLER (DUX) CANNOT BE RENAMED AND THEN
      USED  CONCURRENTLY  WITH  THE  RENAMED HANDLER.  THAT IS, YOU CANNOT FOR
      EXAMPLE RENAME DUX TO DAX AND USE DUX AND DAX AT THE SAME TIME.

                                                                PAGE 2

                GENERAL INFORMATION AND SOFTWARE CORRECTIONS
                --------------------------------------------

INFORMATION   ON   UNSUPPORTED  UTILITIES,  PREVIOUSLY  LOCATED  IN  THE  FILE
UNSUP.TXT, IS NOW LOCATED IN APPENDIX C OF THE RT-11 SYSTEM UTILITIES MANUAL.

THE TERM  'UNSUPPORTED'  AS USED BY RT-11 IN REFERENCE TO A DISTRIBUTED MODULE
MEANS  THAT  RT-11  DOES  NOT GUARANTEE THAT FUTURE RELEASES WILL BE BACKWARDS
COMPATIBLE FOR THAT MODULE, AND  DOES NOT GUARANTEE THAT MODULE WILL APPEAR IN
FUTURE  RELEASES  OF  RT-11.  HOWEVER, SPRS (SOFTWARE PERFORMANCE REPORTS) ARE
ANSWERED FOR ANY MODULE DISTRIBUTED WITH RT-11.


1. MONITORS

   BSTRAP

     O  THE  BOOTSTRAP  NOW  PERFORMS A READ/WRITE OPERATION ON ALL LOCATIONS,
        INCLUDING THOSE BELOW THE 28K WORD BOUNDARY,  DURING THE MEMORY SIZING
        OPERATION.  THAT CORRECTS PARITY FOR ALL MEMORY LOCATIONS. PREVIOUSLY,
        AFTER INITIAL STARTUP  (COLD BOOT),  A MONITOR BUILT FOR MEMORY PARITY
        SUPPORT  RUNNING  A PROGRAM THAT READ LOCATIONS NOT INITIALIZED BY THE
        BOOTSTRAP  COULD  CAUSE  A  MEMORY  PARITY ERROR TRAP.  THAT NO LONGER
        OCCURS.

   KMON

     O  WHEN KMON  PROCESSED  AN INDIRECT COMMAND FILE CONTAINING MULTIPLE IN-
        DIRECT  COMMAND  FILES,  IT SAVED THE COMMAND FILE DEPTH STATUS BEFORE
        DETERMINING  IF  ALL  NESTED INDIRECT COMMAND FILES EXISTED. IF ONE OF
        THE NESTED  INDIRECT  COMMAND  FILES  DID NOT EXIST, AND ERROR WAS SET
        NONE, KMON WOULD REPORT THE NONEXISTENT FILE AND THEN PROCESS THE NEXT
        FILE TWICE.  NOW,  KMON  CORRECTLY SAVES THE COMMAND FILE DEPTH STATUS
        WHILE  REPORTING  THE  NONEXISTENT FILE AND THEN PROPERLY RESTORES IT.
        THE FOLLOWING INDIRECT COMMAND FILE IS CORRECTLY PROCESSED ONLY ONCE.


2. UTILITIES 

   BUP

     O  WHEN PERFORMING FILE BACKUP OPERATIONS, THE V5.2 BUP INCORRECTLY WROTE
        A 1280. (DECIMAL) BLOCK OUTPUT FILE REGARDLESS OF THE INPUT FILE SIZE.
        THAT  WAS  TRUE  ONLY  FOR  FILE  BACKUP  OPERATIONS.  DEVICE   BACKUP
        OPERATIONS PERFORMED AS DOCUMENTED.

        WHEN  BACKING  UP A FILE SMALLER THAN 1280. BLOCKS, BUP CONTINUED PAST
        THE  END  OF  THE  INPUT  FILE, GENERATING HARD ERROR MESSAGES ONCE IT
        REACHED  THE  END  OF  THAT  FILE.  BUP WROTE A 1280. OUTPUT FILE THAT
        CONTAINED THE INPUT FILE.

        WHEN  BACKING  UP A FILE LARGER THAN 1280. BLOCKS, BUP WROTE THE INPUT
        FILE  TO  AN OUTPUT FILE FOR ONLY 1280. BLOCKS. BUP THEN TRUNCATED THE
        REST  OF  THE  INPUT FILE. ANY DATA CONTAINED IN THE INPUT FILE BEYOND
        1280. BLOCKS WAS LOST, AND NO ERROR MESSAGE WAS SENT TO THE USER.

        BUP NOW CORRECTLY BACKS UP FILES AND DEVICES AS DOCUMENTED.

                                                                PAGE 3
   CONFIG

     O  TWO OPTIONS ARE ADDED TO THE UNSUPPORTED UTILITY CONFIG.

          OPTION                PURPOSE

        /D[:YES][:NO]   CAUSES  CONFIG  TO RETURN AN ERROR MESSAGE IN ADDITION
                        TO  SETTING BITS IN USERRB.  YOU CAN ASSUME SUCCESS IF
                        NO ERROR MESSAGE IS RETURNED. USING /D:YES ONCE CAUSES
                        CONFIG  TO  CONTINUE  TO RETURN ERROR MESSAGES WITHOUT
                        REPEATING THE /D OPTION. /D:NO TURNS OFF /D:YES.

        /F              LETS  YOU  USE  CONFIG COMPARISON OPTIONS (/V, /M, AND
                        /B)  WITH FILES. USING /F WITH A FILE LOCKS THE SPECI-
                        FIED FILE TO CONFIG. THAT LETS YOU SUBSEQUENTLY ACCESS
                        THE FILE USING ONLY THE /F OPTION  (WITHOUT SPECIFYING
                        THE FILE AGAIN), AND INCREASES THE ACCESS SPEED.


    DUP

     O  WARNING   AND   ERROR   MESSAGES   DISPLAYED  DURING  COPY/DEVICE  AND
        COPY/DEVICE/NOQUERY   OPERATIONS  HAVE  BEEN  CHANGED  FOR  V5.3.  THE
        COPY/DEVICE  COMMAND  NOW PROMPTS WITH:  'OUTPUT DEVICE IS LARGER. ARE
        YOU SURE?',   OR,  'OUTPUT DEVICE  IS SMALLER. ARE YOU SURE?',    WHEN
        APPROPRIATE.  THE COPY/DEVICE/NOQUERY COMMAND NOW DISPLAYS THE WARNING
        MESSAGE  '?DUP-W-OUTPUT DEVICE IS LARGER THAN INPUT DEVICE',  OR   THE
        ERROR  MESSAGE  '?DUP-E-OUTPUT DEVICE  IS  SMALLER THAN INPUT DEVICE',
        WHEN APPROPRIATE.

    IND

     O  THE .TESTDEVICE DIRECTIVE INCORRECTLY REPORTED THE STATUS OF THE SPOOL
        DEVICE  HANDLER  SP  AS  OFL (OFF-LINE).  IT NOW CORRECTLY REPORTS THE
        STATUS AS UNK (UNKNOWN).
        
    KED/KEX

     O  KED  (OR KEX)  NOW  SETS BITS IN THE USERRB BYTE (BYTE 53) TO INDICATE
        WHETHER  YOU  USE THE EXIT OR QUIT COMMAND TO LEAVE THE EDITOR. IF YOU
        EXIT KED,  IT  SETS  BIT 0 IN USERRB FOR SUCCESS.  IF YOU QUIT KED, IT
        SETS BIT 1 IN USERRB FOR WARNING. THEREFORE, IF YOU HAVE SET THE ERROR
        SEVERITY LEVEL TO WARNING (SET ERROR WARNING) AND ARE RUNNING KED FROM
        WITHIN  AN  INDIRECT  FILE,  QUITTING  KED WILL CAUSE AN EXIT FROM THE
        INDIRECT FILE.
          
    LINK

     O  RT-11 V5.3  REMOVES  THE  RESTRICTION  STATING THAT THE TOTAL COMBINED
        SIZE OF ALL VIRTUAL OVERLAY SEGMENTS CREATED BY THE LINK /V OPTION CAN
        NOT  EXCEED  96K WORDS.  NOW, THE TOTAL COMBINED SIZE IS THE AMOUNT OF
        AVAILABLE MEMORY.

                                                                PAGE 4
    ODT

     O  THE DISTRIBUTED DEBUGGER ODT.OBJ REQUIRES THAT THE OPERATING SYSTEM BE
        LOADED IN MEMORY.  YOU CAN  MODIFY ODT SO THAT IT DOES NOT REQUIRE THE
        OPERATING  SYTEM  BE  LOADED  IN  MEMORY.  THAT COULD  BE USEFUL,  FOR
        EXAMPLE,  IN  DEBUGGING THE BOOTSTRAP.  USE THE FOLLOWING PROCEDURE TO
        CREATE  A  DEBUGGER  CALLED ODTHWD.OBJ THAT FUNCTIONS INDEPENDENTLY OF
        THE OPERATING SYSTEM:

        USE KED TO CREATE THE FOLLOWING PATCH PROGRAM. NAME IT ODTPAT.MAC.  IN
        THE  PROGRAM,  SUBSTITUTE  FOR  THE  SYMBOL ..GVAL, THE VALUE FOR THAT
        SYMBOL LOCATED IN CUSTOM.TXT.

                .TITLE  ODT
                .PSECT  $ODT$
                BASE=..GVAL
                .=.+BASE
                BR      .+34
                .END

        ASSEMBLE THE CREATED PATCH PROGRAM:

                .R MACRO<RET>
                *ODTPAT=ODTPAT<RET>
                *<CTRL/C>

        CREATE  THE   OPERATING  SYSTEM  INDEPENDENT  DEBUGGER  ODTHWD.OBJ  BY
        MODIFYING  ODT.OBJ.  THE  PROCEDURE  DOES  NOT DESTROY THE DISTRIBUTED
        ODT.OBJ,  BUT  MODIFIES  A COPY OF IT.  USE THE UTILITY PAT.SAV IN THE
        FOLLOWING MANNER:

                .R PAT<RET>
                *ODTHWD=ODT,ODTPAT<RET>
                *<CTRL/C>

        EXPLICITLY  SPECIFY  ODTHWD  IN THE LINK/DEBUG COMMAND. IF YOU DO NOT
        SPECIFY ODTHWD, RT-11 BY DEFAULT LINKS THE DISTRIBUTED ODT.

                .LINK/DEBUG:ODTHWD PROGRAM<RET>

    PIP

     O  PIP INCORRECTLY TREATED PRINTERS (LP) AS SEQUENTIAL ACCESS DEVICES FOR
        COPY OPERATIONS FROM THE TERMINAL (TT). THEREFORE, A COPY COMMAND FROM
        TT  TO  LP PRODUCED AN INVALID DEVICE ERROR. NOW, PIP CORRECTLY COPIES
        FROM THE TERMINAL TO THE PRINTER.

     O  WHEN  THE SYSTEM DEVICE (SY) AND THE DATA DEVICE (DK) WERE ASSIGNED TO
        THE  SAME  DEVICE,  A  COPY  OPERATION FROM SY TO DK WOULD INCORRECTLY
        PERFORM  THE  COPY  OPERATION TWICE.  NOW, PIP RENAMES THE FILE TO THE
        OUTPUT FILENAME RATHER THAN COPYING IT.

    SRCCOM

     O  THE  /SLP[:FILESPEC]  OPTION  FOR  THE DIFFERENCES COMMAND IS NOT COR-
        RECTLY  DOCUMENTED.  YOU  MUST  SPECIFY AN OUTPUT FILESPEC;  IT IS NOT
        OPTIONAL. THE CORRECT SYNTAX IS DIFFERENCES/SLP:FILESPEC.

                                                                PAGE 5
    TRANSFER (UNSUPPORTED)

     O  TRANSF.TSK  (TRANSFER  FOR  RSX  OPERATING  SYSTEMS) REQUIRES BOTH THE
        RMSRES AND DAPRES LIBRARIES BE INSTALLED ON THE HOST PDP-11 PROCESSOR.

    VTCOM

     O  VTCOM RETURNS  THE  FOLLOWING NEW ERROR MESSAGE IF THE SYSTEM CLOCK IS
        NOT  RUNNING  WHEN VTCOM BEGINS EXECUTION: ?VTCOM-F-CLOCK NOT RUNNING.
        AS VTCOM DOES NOT CONTINUOUSLY CHECK THE SYSTEM CLOCK WHILE OPERATING,
        THAT MESSAGE IS RETURNED ONLY DURING STARTUP.

     O  TRANSFER SPEED ENHANCEMENTS WERE MADE TO  VTCOM FOR A PREVIOUS RELEASE
        OF RT-11.  VTCOM  SENDS  DATA  AT  THE INTERFACE INTERRUPT SPEED.  THE
        TRANSFER  SPEED  CAN  BE  TOO  FAST  FOR  THE HOST TERMINAL SERVICE TO
        PROCESS. A SYMPTOM IS A BEEPING TERMINAL. TO COMPENSATE, SLOW DOWN THE
        BAUD  RATE  OR  LET  VTCOM  ADJUST THE TRANSFER RATE USING RETRIES AND
        REDUCED PACKET SIZE.


3. DEVICE HANDLERS

    DU

     O  DU  NOW  HAS  A  STATUS  WORD  CONTAINING  INFORMATION  ABOUT THE LAST
        OPERATION PERFORMED BY THE HANDLER.  THE STATUS WORD IS CALLED STATU$,
        AND FOR V5.3  IS LOCATED AT OFFSET 16 FROM THE BASE OF DU.  THE OFFSET
        OF  STATU$  MAY CHANGE WITH  EACH RELEASE OF RT-11.  THE LOW 5 BITS OF
        STATU$ CONTAIN THE STATUS INFORMATION. ALL OTHER BITS ARE RESERVED.
        
        BIT SET         OCTAL VALUE     MEANING WHEN SET

        00000              00           SUCCESS
        00001              01           INVALID COMMAND
        00010              02           COMMAND ABORTED
        00011              03           UNIT OFF-LINE
        00100              04           UNIT AVAILABLE
        00101              05           MEDIA FORMAT ERROR
        00110              06           WRITE PROTECTED MEDIA
        00111              07           COMPARE ERROR
        01000              10           DATA ERROR
        01001              11           HOST BUFFER ACCESS ERROR
        01010              12           CONTROLLER ERROR
        01011              13           DRIVE ERROR

        USE  ODT/VDT  OR THE  E  KEYBOARD  COMMAND  TO EXAMINE THE CONTENTS OF
        STATU$. YOU WILL NEED TO PERFORM CUSTOMIZATION PATCH 2.7.32 LOCATED IN
        THE RT-11 INSTALLATION GUIDE TO USE THE E COMMAND. USE THE SHOW MEMORY
        COMMAND DISPLAY TO FIND THE BASE OF THE  DU HANDLER AND ADD THE OFFSET
        TO THAT BASE. 

                                                                PAGE 6

     O  THE  LOW-MEMORY  SIZE  OF THE DU HANDLER WHEN RUN UNDER THE XM MONITOR
        HAS  BEEN  REDUCED  FROM  APPROXIMATELY 550 WORDS TO APPROXIMATELY 114
        WORDS.  DATA  AND  CODE THAT WAS PREVIOUSLY RESIDENT IN LOW MEMORY HAS
        NOW BEEN PLACED IN A GLOBAL REGION  IN EXTENDED MEMORY. USING THE SAME
        TECHNIQUE, BAD  BLOCK  REPLACEMENT  SUPPORT ADDS ONLY APPROXIMATELY 16
        WORDS TO THE LOW-MEMORY PORTION OF THE DU HANDLER.  APPROXIMATELY 1900
        WORDS  REQUIRED  FOR  BAD  BLOCK REPLACEMENT SUPPORT ARE PLACED IN EX-
        TENDED MEMORY.

    DW

     O  PREVIOUSLY,  THE DW HANDLER APPLIED THE WRONG MAPPING OF LOGICAL BLOCK
        NUMBERS  (LBN) TO PHYSICAL BLOCK NUMBERS (PBN) ON RD5X HARD DISKS. THE
        CORRECT MAPPING IS USED IN RT-11 V5.3.

        THE  DW  MAPPING ERROR CAUSED FILE-STRUCTURED OPERATIONS (.READ/.WRITE
        REQUESTS) TO MAP TO DIFFERENT LOCATIONS THAN NON-FILE-STRUCTURED OPER-
        ATIONS  (.SPFUN  REQUESTS).  FILE-STRUCTURED  AND  NON-FILE-STRUCTURED
        OPERATIONS  ARE  CORRECTED  FOR RT-11 V5.3; HOWEVER, SEE THE ISPFN AND
        .SPFUN SECTIONS IN THIS FILE FOR CHANGES TO THE BLK ARGUMENT.

        BECAUSE DW MAPPING IS CHANGED FOR RT-11 V5.3, ALL RD5X HARD DISKS THAT
        WERE USED BY A PREVIOUS VERSION OF RT-11 MUST BE RECONFIGURED. THAT IS
        DONE  AUTOMATICALLY  BY THE AUTOMATIC INSTALLATION PROCEDURE. ANY RD5X
        HARD DISK  NOT IN YOUR PROCESSOR DURING AUTOMATIC INSTALLATION MUST BE
        INITIALIZED USING  RT-11  V5.3  BEFORE USE. COPY ANY FILES YOU WANT TO
        PRESERVE TO RX50 DISKETTES USING THE VERSION OF RT-11 THAT WROTE THOSE
        FILES  TO  THE  RD5X.  THEN  INITIALIZE THE RD5X HARD DISK USING RT-11
        V5.3.
        
        RECONFIGURATION OF TWO RD52 HARD DISKS CHANGES THEIR AVAILABLE SIZE IN
        BLOCKS. THE FOLLOWING TABLE SHOWS THE CHANGES:

        MANUFACTURER            WAS                     AFTER RECONFIGURATION
        ------------            ---                     ---------------------

        CDC RD52  IS UNCHANGED
        ATASI RD52              55679. BLOCKS           65535. BLOCKS
        QUANTUM RD52            65535. BLOCKS           65407. BLOCKS

        THE REDUCTION OF 128 (DECIMAL) BLOCKS IN AVAILABLE SIZE OF THE QUANTUM
        RD52  IS  CAUSED  BY  CORRECTION  OF  AN ERROR IN PREVIOUS VERSIONS OF
        RT-11. AN AREA RESERVED BY THE DISK WAS INCORRECTLY ALLOCATED FOR DATA
        STORAGE.

     O  DW  USES  THE NEW .DRPTR  MACRO  TO REDUCE ITS MEMORY-RESIDENT SIZE BY
        MOVING  DEVICE  SIZING  AND INITIALIZATION CODE TO NON-MEMORY-RESIDENT
        FETCH  AND  LOAD  CODE. THAT  MAKES DW MORE THAN 150 WORDS SMALLER (IN
        MEMORY).

     O  DW  USES  A NEW SET DW SLOT=N COMMAND TO SUPPORT THE NEW EXPANDER BOX.
        THE  EXPANDER BOX LETS YOU ADD ONE ADDITIONAL RD5X CONTROLLER AND HARD
        DISK TO A  PROFESSIONAL SERIES PROCESSOR CONFIGURATION. BECAUSE THE DW
        HANDLER SUPPORTS ONLY  A  SINGLE DEVICE CONNECTED TO A SINGLE CONTROL-
        LER,  YOU  MUST  RENAME  DW  AND  USE THE SLOT=N OPTION TO SUPPORT THE
        EXPANDER  BOX.  USE  THE  SLOT=N  OPTION  ONLY  WHEN YOU HAVE ADDED AN
        EXPANDER BOX, AND ONLY WITH THE RENAMED DW HANDLER.

                                                                PAGE 7

        USE THE  SLOT=N  OPTION  TO  IDENTIFY THE EXPANDER BOX RD5X CONTROLLER
        CARD  SLOT  IN  THE  PROFESSIONAL'S BACK PLANE. THE SIX CARD SLOTS ARE
        NUMBERED  0  THROUGH  5, FROM FRONT TO BACK. THE FIRST RD5X CONTROLLER
        IS  TYPICALLY  IN SLOT 0. THE SECOND RD5X CONTROLLER TYPICALLY GOES IN
        SLOT 5.  ASSUMING  THAT,  ISSUE  THE FOLLOWING COMMANDS TO SUPPORT THE
        EXPANDER BOX:

                . COPY SY:DW[X].SYS DV[X].SYS
                . SET DV SLOT=5
                . INSTALL DV

        NOTE:   THE  SLOT=N  OPTION AND DV HANDLER AS SUPPORT FOR THE EXPANDER
                BOX IS AN INTERIM SOLUTION.  A  SIMPLER SOLUTION WILL PROBABLY
                BE  SUPPLIED  IN  A FUTURE RELEASE.  DO NOT RELY ON THE SLOT=N
                OPTION BEING PRESENT IN FUTURE RELEASES.

     O  RT-11  SUPPORTS  ONLY  ONE DRIVE WITH THE DW HANDLER.  PREVIOUSLY, YOU
        COULD  SPECIFY  UNIT  (N)  NUMBERS  0  AND  1 IN THE SET DWN [NO]WRITE
        COMMAND.  NOW,  YOU  CAN  ONLY  SPECIFY UNIT NUMBER 0. AN OMITTED UNIT
        NUMBER DEFAULTS TO UNIT 0.

    LD

     O  PREVIOUSLY,  A  FETCH  ERROR  OCCURRING  DURING AN OPERATION REQUIRING
        LD TO FETCH A HANDLER  COULD CORRUPT LD'S INTERNAL TABLE. NOW, A FETCH
        ERROR  OCCURRING UNDER THOSE CIRCUMSTANCES CORRECTLY RETURNS THE ERROR
        MESSAGE ?LD-F-FETCH ERROR.

    LP/LS

     O  THE  DESCRIPTION  OF THE CONSEQUENCES OF ISSUING A PRINT COMMAND TO AN
        OFF LINE  PRINTER  IN  THE V5.3 RELEASE NOTES IS TOO SEVERE.  IN FACT,
        DOING THAT  MAKES THE SYSTEM ONLY APPEAR HUNG. YOU NEED ONLY PLACE THE
        PRINTER ON LINE OR ENTER CTRL/C TWICE TO FREE THE SYSTEM.

    RK

     O  THE  RK  HANDLER NOW RETURNS A HARD ERROR IF A TRANSFER WOULD HAVE AC-
        CESSED  MEMORY BEYOND THE LIMITS ADDRESSABLE BY THE CONTROLLER IN USE,
        THAT IS, 64K BYTES ON THE Q-BUS AND 256K BYTES ON THE UNIBUS.


    TT

     O  A  CTRL/Z  WITHIN  DATA  BEING  READ  FROM THE TT DEVICE IS TREATED AS
        END-OF-FILE  (EOF)  BY  THE .READ REQUEST. AT LEAST TWO .READ REQUESTS
        ARE  NECESSARY  TO  RETURN  THE  EOF  ERROR (CARRY BIT SET AND BYTE 52
        CONTAINING  ERROR CODE 0). THE FIRST .READ REQUEST TRANSFERS INTO YOUR
        BUFFER ALL DATA UP TO  (BUT NOT INCLUDING) THE CTRL/Z. THE REST OF THE
        BUFFER IS PADDED WITH NULLS. A SECOND .READ REQUEST IS REQUIRED TO GET
        THE   EOF   ERROR.   SUBSEQUENT  .READ  REQUESTS  CAN  RETURN  FURTHER
        CHARACTERS.

                                                                PAGE 8
    XC/XL

     O  A CTRL/Z WITHIN DATA BEING READ IS TREATED AS END-OF-FILE (EOF) BY THE
        .READ REQUEST. AT LEAST TWO .READ REQUESTS ARE NECESSARY TO RETURN THE
        EOF ERROR  (CARRY  BIT  SET  AND BYTE 52 CONTAINING ERROR CODE 0). THE
        FIRST .READ REQUEST TRANSFERS INTO YOUR BUFFER ALL DATA UP TO (BUT NOT
        INCLUDING) THE CTRL/Z.  THE REST OF THE BUFFER IS PADDED WITH NULLS. A
        SECOND  .READ  REQUEST  IS  REQUIRED  TO GET THE EOF ERROR. SUBSEQUENT
        .READ REQUESTS CAN RETURN FURTHER CHARACTERS.



4. PROGRAMMED REQUESTS (SYSMAC)

     O  ALL VARIABLE NAMES OF THE FORM ...V* ARE RESERVED BY DIGITAL.

     O  ALL MACRO NAMES OF THE FORM ...CM% ARE RESERVED BY DIGITAL.

    .ABTIO

     O  THE  .ABTIO REQUEST INCORRECTLY ABORTED ALL OF A JOB'S OUTSTANDING I/O
        OPERATIONS;  THAT IS,  IT ABORTED ALL OUTSTANDING I/O ON ALL CHANNELS.
        ALSO,  ALL ABORTED I/O QUEUE ELEMENTS WERE LOST. NOW, .ABTIO CORRECTLY
        ABORTS  A  JOB'S  OUTSTANDING  I/O  OPERATIONS  ONLY  ON THE SPECIFIED
        CHANNEL.  THE ABORTED I/O QUEUE ELEMENTS ARE CORRECTLY RETURNED TO THE
        LIST OF AVAILABLE QUEUE ELEMENTS.

        USER-WRITTEN INTERNALLY-QUEUED HANDLERS  SHOULD HAVE THEIR ABORT ENTRY
        CODE  MODIFIED IN THE FOLLOWING MANNER. THE ABORT ENTRY CODE MUST CON-
        TINUE  TO  CHECK THAT R4 EQUALS THE JOB NUMBER FOR THAT QUEUE ELEMENT.
        IN ADDITION,  THE  HANDLER  SHOULD  ABORT A QUEUE ELEMENT ONLY WHEN R5
        EQUALS  ZERO  OR  WHEN  R5  POINTS TO THE CHANNEL STATUS WORD FOR THAT
        QUEUE ELEMENT.

    .DEVICE

     O  THE  ADDRESS SPECIFIED IN THE ADDR ARGUMENT MUST RESIDE IN THE LOW 28K
        WORDS OF MEMORY.

    .SPFUN

     O  FOR  DU,  .SPFUN  376  AND 377 CAN RETURN THE FOLLOWING ERROR CODE (IN
        ADDITION TO THOSE ALSO RETURNED BY DM):

        140000          A  FORCED  ERROR OCCURRED. THE DEVICE CONTROLLER OR DU
                        HANDLER  HAS  DISCOVERED BAD DATA ON A GOOD (REPLACED)
                        BLOCK.  (BAD  BLOCK  REPLACEMENT  WAS PERFORMED BUT NO
                        DATA WAS RECOVERED.)

     O  FOR  DW,  .SPFUN 376 AND 377 NOW USE LOGICAL BLOCK NUMBERS RATHER THAN
        PHYSICAL  BLOCK NUMBERS IN THE BLK ARGUMENT.  THEREFORE,  TO ADDRESS A
        WRITE OR READ TO PHYSICAL BLOCK ZERO, SPECIFY -1 FOR THE BLK ARGUMENT.
        THAT IS  NECESSARY BECAUSE THE PHYSICAL BLOCK NUMBER OF A DW DEVICE IS
        ALWAYS ONE LESS THAN THE LOGICAL BLOCK NUMBER.
                                                                
                                                                PAGE 9

5. SYSTEM SUBROUTINES (SYSLIB)


    GIWRIT

     O  THE  MSGLEN  PARAMETER  ACCEPTS  A  VALUE EQUAL TO OR GREATER THAN -1.
        SPECIFY THE -1 VALUE FOR MSGLEN TO RESET GIDIS.

    INTSET

     O  THE LINKAGE  ESTABLISHED  BY  INTSET  BETWEEN THE PROCESSOR AND DEVICE
        PRIORITIES  WAS  PERFORMED IMPROPERLY.  THAT RESULTED IN THE PROCESSOR
        EXECUTING  THE  INTERRUPT AT A PROCESSOR PRIORITY LEVEL THAT WAS LOWER
        THAN  THE  DEVICE  PRIORITY  LEVEL.  NOW,  THE  PROCESSOR EXECUTES THE
        INTERRUPT WHEN THE PROCESSOR AND DEVICE PRIORITY LEVELS ARE THE SAME.

    ISPFN

     O  FOR  DU,  ISPFN  376  AND  377 CAN RETURN THE FOLLOWING ERROR CODE (IN
        ADDITION TO THOSE ALSO RETURNED BY DM):

        140000          A  FORCED  ERROR OCCURRED. THE DEVICE CONTROLLER OR DU
                        HANDLER  HAS  DISCOVERED BAD DATA ON A GOOD (REPLACED)
                        BLOCK.  (BAD  BLOCK  REPLACEMENT  WAS PERFORMED BUT NO
                        DATA WAS RECOVERED.)

     O  FOR  DW,  ISPFN  376 AND 377 NOW USE LOGICAL BLOCK NUMBERS RATHER THAN
        PHYSICAL  BLOCK  NUMBERS  IN THE BLK ARGUMENT. THEREFORE, TO ADDRESS A
        WRITE OR READ TO PHYSICAL BLOCK ZERO, SPECIFY -1 FOR THE BLK ARGUMENT.
        THAT  IS NECESSARY BECAUSE THE PHYSICAL BLOCK NUMBER OF A DW DEVICE IS
        ALWAYS ONE LESS THAN THE LOGICAL BLOCK NUMBER.

    MTTINT

     O  RT-11 REJECTED (WOULD NOT ANSWER) INCOMING CALLS TO THE SHARED CONSOLE
        THAT WAS SET TO A REMOTE DL LINE UNLESS A PROGRAM WAS RUNNING THAT HAD
        ATTACHED TO THAT DL LINE.  RT-11 NOW ACCEPTS  (ANSWERS) INCOMING CALLS
        UNDER THOSE CIRCUMSTANCES.


----- END OF V5NOTE.TXT
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 1


      1                                 .MCALL .MODULE
      2 000000                          .MODULE TERMID,VERSION=03,COMMENT=<DETERMINE CONSOLE TYPE>
      3
      4                                 ;                      COPYRIGHT (C) 1986 BY
      5                                 ;                DIGITAL EQUIPMENT CORPORATION, MAYNARD,
      6                                 ;                 MASSACHUSETTS.   ALL RIGHTS RESERVED.
      7                                 ;
      8                                 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
      9                                 ; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
     10                                 ; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
     11                                 ; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
     12                                 ; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
     13                                 ; TRANSFERRED.
     14                                 ;
     15                                 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
     16                                 ; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
     17                                 ; CORPORATION.
     18                                 ;
     19                                 ; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
     20                                 ; SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
     21                                 ;
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 2


      1                                         .ENABL LC
      2                                 ;+
      3                                 ;       THIS PROGRAM DETERMINES THE NATURE OF YOUR CONSOLE TERMINAL.
      4                                 ;       TERMINALS RECOGNIZED ARE VT50, VT50H, VT50H WITH HARD COPY
      5                                 ;       UNIT, VT52, VT52 WITH HARD COPY UNIT, LA34, LA120, VT55, VT102,
      6                                 ;       VT131, VT132, VT100 IN ANSI MODE AND VT100 IN VT52 MODE.
      7                                 ;       THE LAST MENTIONED IS SET IN ANSI MODE BEFORE THE PROGRAM EXITS.
      8                                 ;
      9                                 ;       ALL NEWER TERMINALS I.E. VT1XX, LA34 AND LA1XX RESPOND TO THE
     10                                 ;       ANSI QUERY MESSAGE <ESC>[0C BY REPLYING WITH AN UNIQUE CHARACTER
     11                                 ;       STRING. THE OTHER, OLDER TERMINALS RESPOND ONLY TO <ESC>Z.
     12                                 ;       AN ANSI QUERY HAS THE UNFORTUNATE EFFECT OF HANGING A VT52 BECAUSE
     13                                 ;       <ESC>[ CORRESPONDS TO THE SET NOSCROLL COMMAND FOR A VT52.
     14                                 ;       TO FORESTALL THIS RISK THE PROGRAM SENDS AN <ESC>Z FIRST TO
     15                                 ;       DETERMINE IF THE TERMINAL IS ONE OF THE OLDER ONES. IF THERE IS
     16                                 ;       NO RESPONSE TO THE <ESC>Z THE ANSI QUERY IS TRANSMITTED.
     17                                 ;
     18                                 ;       IT IS CONCEIVABLE THAT A VT52 FAILS TO REPLY TO AN <ESC>Z
     19                                 ;       BECAUSE OF LINE OR MODEM NOISE DISTORTING THE QUERY. IN THAT
     20                                 ;       CASE THE ANSI QUERY WOULD FREEZE THE TERMINAL. THEREFORE A
     21                                 ;       SET UNSCROLL COMMAND IN THE SHAPE OF <ESC>\ IS TRANSMITTED
     22                                 ;       FOR SAFETY BEFORE THE PROGRAM EXITS. IN THE EVENT THAT THE
     23                                 ;       VT52 CURSOR WERE ON THE LAST LINE, THE SET UNSCROLL COMMAND
     24                                 ;       ALSO WOULDN'T WORK. THAT IS WHY, PRIOR TO SENDING THE ANSI
     25                                 ;       QUERY <ESC>[C A "CURSOR UP" COMMAND <ESC>A FOR A VT52 IS
     26                                 ;       TRANSMITTED SO THAT THE FINAL SET UNSCROLL COMMAND IS
     27                                 ;       EFFECTIVE.
     28                                 ;
     29                                 ;       MESSAGES REGARDING THE PRESENCE OR ABSENCE OF THE CLOCK AND
     30                                 ;       PRINTING THE TERMINAL TYPE ARE PRINTED ON ENABLING THE CONDI-
     31                                 ;       TIONAL ASSEMBLY PARAMETER $MESG.
     32                                 ;
     33                                 ;       THE USER ERROR BYTE IS SET TO WARNING IF THE TERMINAL IS A VIDEO,
     34                                 ;       AND FATAL IF THE TERMINAL TYPE IS UNKNOWN.
     35                                 ;
     36                                 ; AUTHOR:       SHEKAR SENGPUTA
     37                                 ;
     38                                 ; EDITS:        L. PARENT       - ADD NEW TERMINAL SUPPORT
     39                                 ;                               - LENGTHEN REPLY BUFFER
     40                                 ;                               - REMOVE CLOCK STUFF
     41                                 ;-
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 3


      1                                 .MCALL .TTINR, .TTYOUT, .EXIT, .MRKT, .PRINT, .QSET, .RCTRLO, .GTIM
      2                                 .GLOBL TIME                     ;SYSLIB ROUTINE
      3                                 ;
      4                                 ;       BIT AND WORD DEFINITIONS
      5                                 ;
      6         000053                          USERRB  =       53              ;USER ERROR BYTE
      7         000002                          WARN$   =       2               ;TERMINAL IS VIDEO
      8         000004                          ERR$    =       4               ;TERMINAL IS UNKNOWN
      9         000044                          JSW     =       44              ;JOB STATUS WORD
     10         040000                          LCBIT   =       40000           ;LOWER CASE BIT - 14
     11         010000                          TTSPC$  =       10000           ;TERMINAL SPECIAL MODE BIT - 12
     12         000100                          TCBIT$  =       100             ;INHIBIT WAIT ON READS FOR FB - BIT 6
     13         050100                          MASK    =       LCBIT+TTSPC$+TCBIT$
     14         000001                          $MESG   =       1               ;REMOVE SEMICOLON TO PRINT TERMID. MSG
     15                                 ;
     16                                 ;       START OF MAIN PROGRAM
     17                                 ;
     18                                         .ENABL  LSB
     19 000000                          START:
     20 000000                                  .GTIM   #AREA,#T1               ;GET INITIAL TIME
     21 000020  052737  050100  000044          BIS     #MASK,@#JSW             ;ADJUST JSW
     22 000026  012701  000676'                 MOV     #QUERY1, R1             ;POINTER TO ESC. Z QUERY
     23 000032  004767  000224                  JSR     PC,OUTSTR               ;OUTPUT QUERY MESSAGE
     24 000036  012702  000720'                 MOV     #REPLY, R2              ;ADDRESS TO STORE TERMINAL REPLY
     25 000042  004767  000232                  JSR     PC,INSTR                ;GET THE ANSWER MESSAGE FROM TERMINAL
     26 000046  122767  000057  000645          CMPB    #'/,REPLY+1             ;IS IT AN OLD FASHIONED RESPONSE
     27 000054  001013                          BNE     ANSCHK                  ;NO, TRY TO SEND AN ANSI QUERY
     28 000056  116701  000640                  MOVB    REPLY+2,R1              ;THE THIRD CHARACTER IS DISTINCTIVE
     29 000062  012702  000770'                 MOV     #TABL1,R2               ;R2 POINTS TO HEAD OF FIRST TABLE
     30 000066  005722                  1$:     TST     (R2)+                   ;END OF LIST?
     31 000070  001442                          BEQ     3$                      ;UNIDENTIFIED TERMINAL
     32 000072  005202                          INC     R2                      ;ADD ONE TO GET TO HIGHER BYTE
     33 000074  120122                          CMPB    R1,(R2)+                ;CHECK AGAINST TABLE AND ADVANCE PTR.
     34 000076  001373                          BNE     1$                      ;IF NO MATCH TRY NEXT TABLE ENTRY
     35 000100  000172  177774                  JMP     @-4(R2)                 ;IF MATCH, JUMP TO THE CORRECT ROUTINE
     36 000104                          ANSCHK:
     37 000104  012701  000702'                 MOV     #QUERY2,R1              ;PREPARE TO SEND ANSI QUERY
     38 000110  004767  000146                  JSR     PC,OUTSTR               ;OUTPUT THE STRING
     39 000114  012702  000720'                 MOV     #REPLY,R2               ;USE THE SAME REPLY BUFFER
     40 000120  004767  000154                  JSR     PC,INSTR                ;READ IN REPLY FROM TERMINAL
     41 000124  116701  000573                  MOVB    REPLY+3,R1              ;MOVE TERMINAL-ID TO R1
     42 000130  116703  000570                  MOVB    REPLY+4,R3              ;MOVE OTHER BYTE TO R3
     43 000134  001420                          BEQ     3$                      ;IF IT'S A ZERO TERMINAL UNKNOWN
     44 000136  012702  001026'                 MOV     #TABL2,R2               ;R2 POINTS TO HEAD OF FIRST TABLE
     45 000142  005722                  2$:     TST     (R2)+                   ;END OF LIST?
     46 000144  001414                          BEQ     3$                      ;UNIDENTIFIED TERMINAL
     47 000146  105712                          TSTB    (R2)                    ;IS IT ZERO?
     48 000150  001405                          BEQ     25$                     ;IF SO, DON'T CHECK IT
     49 000152  120312                          CMPB    R3,(R2)                 ;DOES IT MATCH?
     50 000154  001403                          BEQ     25$                     ;BRANCH IF SO
     51 000156  005202                          INC     R2                      ;POINT TO NEXT BYTE IN REPLY
     52 000160  005202                          INC     R2                      ;SKIP NEXT BYTE IN REPLY
     53 000162  000767                          BR      2$                      ;NO MATCH
     54 000164  005202                  25$:    INC     R2                      ;CHECK NEXT BYTE
     55 000166  120122                          CMPB    R1,(R2)+                ;DOES IT MATCH?
     56 000170  001364                          BNE     2$                      ;BRANCH IF SO
     57 000172  000172  177774                  JMP     @-4(R2)                 ;IF MATCH, JUMP TO THE CORRECT ROUTINE
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 3-1


     58 000176  152737  000002  000053  3$:     BISB    #WARN$,@#USERRB         ;UNKNOWN TERMINAL, SET USER ERROR BYTE
     59                                         .IFDF   $MESG
     60 000204  012702  001536'                 MOV     #UNKNWN,R2              ;POINT R2 TO UNKNOWN TERM MESSAGE
     61                                         .IFF
     62                                         CLR     R2
     63                                         .ENDC
     64                                         .DSABL  LSB
     65 000210                          EXIT:
     66 000210  012701  001104'                 MOV     #SAFETY,R1              ;ISSUE AN UNCLOG VT52 FOR SAFETY
     67 000214  004767  000042                  JSR     PC,OUTSTR               ;OUTPUT ESC. SEQ AND FINAL MESSAGE
     68                                 .IFDF   $MESG
     69 000220  005702                          TST     R2                      ;DO WE WANT TO PRINT MESSAGE?
     70 000222  001413                          BEQ     1$                      ;IF NO CLEANUP MASK AND EXIT
     71 000224  012701  001110'                 MOV     #MSG,R1                 ;POINT R1 TO BEGINNING OF MESSAGE
     72 000230  004767  000026                  JSR     PC,OUTSTR               ;PRINT MESSAGE
     73 000234  010201                          MOV     R2,R1                   ;R2 POINTS TO TERMINAL TYPE
     74 000236  004767  000020                  JSR     PC,OUTSTR               ;PRINT TERMINAL-ID.
     75 000242  012701  000714'                 MOV     #CRLF,R1                ;PRINT A CARRIAGE RETURN BEFORE
     76 000246  004767  000010                  JSR     PC,OUTSTR               ;FINISHING
     77                                 .ENDC
     78 000252  042737  050100  000044  1$:     BIC     #MASK,@#JSW             ;CLEAR ALL SPECIAL MODE BITS
     79 000260                                  .EXIT
     80                                 ;
     81                                 ;       SUBROUTINE TO OUTPUT THE QUERY
     82                                 ;       STRINGS AND ANY OTHER MESSAGES
     83                                 ;
     84 000262                          OUTSTR:
     85 000262                                  .RCTRLO                         ;MAKE SURE JSWS AGREE
     86 000264                          OUTQRY:
     87 000264                                  .TTYOUT (R1)+                   ;START SENDING QUERY MESSAGE
     88 000272  105711                          TSTB    (R1)                    ;END OF ESCAPE SEQUENCE?
     89 000274  001373                          BNE     OUTQRY                  ;0 BYTE SIGNIFIES END OF QUERY
     90 000276  000207                          RTS     PC
     91                                 ;
     92                                 ;       SUBROUTINE TO READ THE TERMINAL REPLIES
     93                                 ;
     94                                         .ENABL  LSB
     95 000300                          INSTR:
     96 000300  012701  002000                  MOV     #2000,R1                ;USE R1 AS COUNTER TO BE COUNTED DOWN
     97 000304                          INRPLY:
     98 000304                                  .TTINR                          ;READ
     99 000306  103402                          BCS     NOCHAR                  ;CARRY SET MEANS NOTHING TO READ
    100 000310  110022                          MOVB    R0,(R2)+                ;STORE IN INPUT BUFFER
    101 000312  000774                          BR      INRPLY                  ;TRY TO READ ANOTHER CHARACTER
    102 000314                          NOCHAR:
    103 000314  005301                          DEC     R1                      ;IF NO CLOCK WE HAVE TO DO A WAIT LOOP
    104 000316  001372                          BNE     INRPLY                  ;TRY TO READ AGAIN IF COUNTER > 0
    105 000320  000207                          RTS     PC                      ;IF WAIT LOOP RETURN AFTER R1=0
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 4


      1                                 ;
      2                                 ;       PROCEDURES TO HANDLE EACH TYPE OF TERMINAL.
      3                                 ;       IF A MESSAGE IS TO BE PRINTED A POINTER TO
      4                                 ;       TO THE TEXT TO BE PRINTED IS STORED IN R2.
      5                                 ;       SINCE WE ARE TESTING VIDEO TERMINALS THE WARNING
      6                                 ;       BIT IS SET IN THE USER ERROR BYTE 53 IN ALL
      7                                 ;       CASES EXCEPT FOR VIDEO TERMINALS.
      8                                 ;
      9 000322                          VT50:
     10 000322  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     11                                         .IFDF   $MESG
     12 000330  012702  001254'                 MOV     #VT50M,R2
     13                                         .IFF
     14                                         CLR     R2
     15                                         .ENDC
     16 000334  000167  177650                  JMP     EXIT
     17 000340                          VT50H:
     18 000340  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     19                                         .IFDF   $MESG
     20 000346  012702  001262'                 MOV     #VT50HM,R2
     21                                         .IFF
     22                                         CLR     R2
     23                                         .ENDC
     24 000352  000167  177632                  JMP     EXIT
     25 000356                          VT50HC:
     26 000356  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     27                                         .IFDF   $MESG
     28 000364  012702  001270'                 MOV     #VT50CM,R2
     29                                         .IFF
     30                                         CLR     R2
     31                                         .ENDC
     32 000370  000167  177614                  JMP     EXIT
     33 000374                          VT52:
     34 000374  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     35                                         .IFDF   $MESG
     36 000402  012702  001312'                 MOV     #VT52M,R2
     37                                         .IFF
     38                                         CLR     R2
     39                                         .ENDC
     40 000406  000167  177576                  JMP     EXIT
     41 000412                          VT52C:
     42 000412  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     43                                         .IFDF   $MESG
     44 000420  012702  001320'                 MOV     #VT52CM,R2
     45                                         .IFF
     46                                         CLR     R2
     47                                         .ENDC
     48 000424  000167  177560                  JMP     EXIT
     49 000430                          VT55:
     50 000430  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     51                                         .IFDF   $MESG
     52 000436  012702  001342'                 MOV     #VT55M,R2
     53                                         .IFF
     54                                         CLR     R2
     55                                         .ENDC
     56 000442  000167  177542                  JMP     EXIT
     57 000446                          VT152:
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 4-1


     58 000446  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     59 000454  012701  000710'                 MOV     #SETANS,R1              ;THIS IS A VT100 IN VT52 MODE
     60 000460  004767  177576                  JSR     PC,OUTSTR               ;THE TERMINAL IS SET TO ANSI
     61                                         .IFDF   $MESG
     62 000464  012702  001350'                 MOV     #VT152M,R2              ;MODE BEFORE A RETURN FROM THE
     63                                         .IFF
     64                                         CLR     R2
     65                                         .ENDC
     66 000470  000167  177514                  JMP     EXIT                    ;ROUTINE IS EXECUTED
     67 000474                          VT100:
     68 000474  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     69                                         .IFDF   $MESG
     70 000502  012702  001402'                 MOV     #VT100M,R2
     71                                         .IFF
     72                                         CLR     R2
     73                                         .ENDC
     74 000506  000167  177476                  JMP     EXIT
     75 000512                          VT102:
     76 000512  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     77                                         .IFDF   $MESG
     78 000520  012702  001410'                 MOV     #VT102M,R2
     79                                         .IFF
     80                                         CLR     R2
     81                                         .ENDC
     82 000524  000167  177460                  JMP     EXIT
     83 000530                          VR201:
     84 000530  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     85                                         .IFDF   $MESG
     86 000536  012702  001424'                 MOV     #VR201M,R2
     87                                         .IFF
     88                                         CLR     R2
     89                                         .ENDC
     90 000542  000167  177442                  JMP     EXIT
     91 000546                          VR202:
     92 000546  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
     93                                         .IFDF   $MESG
     94 000554  012702  001452'                 MOV     #VR202M,R2
     95                                         .IFF
     96                                         CLR     R2
     97                                         .ENDC
     98 000560  000167  177424                  JMP     EXIT
     99 000564                          VT125:
    100 000564  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
    101                                         .IFDF   $MESG
    102 000572  012702  001416'                 MOV     #VT125M,R2
    103                                         .IFF
    104                                         CLR     R2
    105                                         .ENDC
    106 000576  000167  177406                  JMP     EXIT
    107 000602                          VT131:
    108 000602  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
    109                                         .IFDF   $MESG
    110 000610  012702  001500'                 MOV     #VT131M,R2
    111                                         .IFF
    112                                         CLR     R2
    113                                         .ENDC
    114 000614  000167  177370                  JMP     EXIT
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 4-2


    115 000620                          VT132:
    116 000620  152737  000002  000053          BISB    #WARN$,@#USERRB         ;VIDEO TERMINAL
    117                                         .IFDF   $MESG
    118 000626  012702  001506'                 MOV     #VT132M,R2
    119                                         .IFF
    120                                         CLR     R2
    121                                         .ENDC
    122 000632  000167  177352                  JMP     EXIT
    123 000636                          LA120:
    124                                         .IFDF   $MESG
    125 000636  012702  001374'                 MOV     #LA120M,R2
    126                                         .IFF
    127                                         CLR     R2
    128                                         .ENDC
    129 000642  000167  177342                  JMP     EXIT
    130 000646                          LA100:
    131                                         .IFDF   $MESG
    132 000646  012702  001522'                 MOV     #LA100M,R2
    133                                         .IFF
    134                                         CLR     R2
    135                                         .ENDC
    136 000652  000167  177332                  JMP     EXIT
    137 000656                          LA34:
    138                                         .IFDF   $MESG
    139 000656  012702  001514'                 MOV     #LA34M,R2
    140                                         .IFF
    141                                         CLR     R2
    142                                         .ENDC
    143 000662  000167  177322                  JMP     EXIT
    144 000666                          LA12:
    145                                         .IFDF   $MESG
    146 000666  012702  001530'                 MOV     #LA12M,R2
    147                                         .IFF
    148                                         CLR     R2
    149                                         .ENDC
    150 000672  000167  177312                  JMP     EXIT
    151                                         .NLIST  BEX
    152 000676     033     132     000  QUERY1: .ASCIZ <33>/Z/                  ;QUERY MESSAGE VALID FOR OLDER
    153                                         .EVEN                           ;TERMINALS
    154                                 ;
    155                                 ;       PRIOR TO SENDING AN ANSI QUERY
    156                                 ;       A "MOVE CURSOR UP BY ONE LINE"
    157                                 ;       FOR A VT52 IS ISSUED. THIS WILL
    158                                 ;       BE NECESSARY ONLY IF THE VT52
    159                                 ;       DID NOT RESPOND TO THE FIRST QUERY
    160                                 ;       DUE TO LINE NOISE. MOVING THE CURSOR
    161                                 ;       UP BY ONE LINE ENSURES THAT A SET
    162                                 ;       SCROLL ISSUED BEFORE THE END OF THE
    163                                 ;       PROGRAM WILL UNCLOG THE VT52 SHOULD
    164                                 ;       IT BE HUNG UP BY THE ANSI QUERY
    165                                 ;
    166                                 ;
    167 000702     033     101     033  QUERY2: .ASCIZ <33>/A/<33>/[C/          ;ANSI QUERY MESSAGE PRECEDED BY
    168                                                                         ;MOVE CURSOR UP BY ONE LINE FOR
    169                                                                         ;VT52
    170 000710     033     074     000  SETANS: .ASCIZ <33>/</
    171                                         .EVEN
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 4-3


    172 000714     015     012     000  CRLF:   .BYTE   15,12,0,0               ;CR/LF FOLLOWED BY NULL BYTES
    173 000720                          REPLY:  .BLKB   40.                     ;LONGER THAN THE LONGEST REPLY
    174                                 ;
    175                                 ;       TABLE 1 CONTAINS THE RESPONSES OF
    176                                 ;       OLDER TERMINALS WHICH REPLY TO A QUERY
    177                                 ;       OF <ESC>Z. THE THIRD BYTE OF THE REPLY
    178                                 ;       IS UNIQUE FOR EVERY TERMINAL IF IT RESPONDS
    179                                 ;
    180 000770                          TABL1:
    181 000770  000322'                         .WORD   VT50
    182 000772     000     101                  .BYTE   0,'A                    ;ESC /A IS THE REPLY OF A VT50
    183 000774  000340'                         .WORD   VT50H
    184 000776     000     110                  .BYTE   0,'H                    ;ESC /H IS A VT50H
    185 001000  000356'                         .WORD   VT50HC
    186 001002     000     112                  .BYTE   0,'J                    ;ESC /J IS A VT50H WITH COPIER
    187 001004  000374'                         .WORD   VT52
    188 001006     000     113                  .BYTE   0,'K                    ;ESC /K IS A VT52
    189 001010  000412'                         .WORD   VT52C
    190 001012     000     114                  .BYTE   0,'L                    ;ESC /L IS A VT52 WITH COPIER
    191 001014  000430'                         .WORD   VT55
    192 001016     000     103                  .BYTE   0,'C                    ;ESC /C IS A VT55
    193 001020  000446'                         .WORD   VT152
    194 001022     000     132                  .BYTE   0,'Z                    ;ESC /Z IS A VT100 IN 52 MODE
    195 001024  000000                          .WORD   0                       ;END OF OLD FASHIONED LIST
    196                                 ;
    197                                 ;       TABLE 2 IS A LIST OF REPLIES OF ALL
    198                                 ;       TERMINALS THAT RESPOND TO THE ANSI
    199                                 ;       QUERY OF <ESC>[C. THE FOURTH BYTE OF THE
    200                                 ;       REPLY IS THE UNIQUE ID OF THE TERMINAL
    201                                 ;
    202 001026                          TABL2:
    203 001026  000530'                         .WORD   VR201                   ;THE 4TH WORD OF A VT100 CLASS
    204 001030     061     066                  .BYTE   '1,'6                   ;IN ANSI MODE IS AN ASCII 61
    205 001032  000546'                         .WORD   VR202                   ;THE 4TH WORD OF A VT200 CLASS
    206 001034     062     066                  .BYTE   '2,'6                   ;IN ANSI MODE IS AN ASCII 62
    207 001036  000564'                         .WORD   VT125                   ;THE 4TH WORD OF A VT125
    208 001040     062     061                  .BYTE   '2,'1                   ;IN ANSI MODE IS AN ASCII 12
    209 001042  000646'                         .WORD   LA100                   ;THE 4TH & 5TH BYTES OF AN LA100
    210 001044     060     061                  .BYTE   '0,'1                   ;IN ANSI MODE IS AN ASCII 10
    211 001046  000666'                         .WORD   LA12                    ;THE FOURTH WORD OF AN LA12
    212 001050     064     061                  .BYTE   '4,'1                   ;IS AN ASCII 14
    213 001052  000474'                         .WORD   VT100                   ;THE FOURTH BYTE OF A VT100
    214 001054     000     061                  .BYTE   0,'1                    ;IN ANSI MODE IS AN ASCII 1
    215 001056  000620'                         .WORD   VT132                   ;THE FOURTH BYTE OF A VT132
    216 001060     000     064                  .BYTE   0,'4                    ;IN ANSI MODE IS AN ASCII 4
    217 001062  000512'                         .WORD   VT102                   ;THE FOURTH BYTE OF A VT102
    218 001064     000     066                  .BYTE   0,'6                    ;IN ANSI MODE IS AN ASCII 6
    219 001066  000602'                         .WORD   VT131                   ;THE FOURTH BYTE OF A VT131
    220 001070     000     067                  .BYTE   0,'7                    ;IN ANSI MODE IS AN ASCII 7
    221 001072  000636'                         .WORD   LA120                   ;THE FOURTH BYTE OF AN LA120
    222 001074     000     062                  .BYTE   0,'2                    ;IS AN ASCII 2
    223 001076  000656'                         .WORD   LA34                    ;THE FOURTH BYTE OF AN LA34
    224 001100     000     063                  .BYTE   0,'3                    ;IS AN ASCII 3
    225 001102  000000                          .WORD   0
    226 001104     033     134     000  SAFETY: .ASCIZ <33>/\/                  ;SET SCROLL FOR VT52 FOR SAFETY
    227                                         .EVEN
    228                                 .IFDF   $MESG
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 4-4


    229 001110     040     040     040  MSG:    .ASCIZ/        YOUR CONSOLE IS A /
    230                                         .EVEN
    231                                 .ENDC
    232 001144  000000                  TIMOUT: .WORD 0                         ;FLAGWORD SET WHEN TIME FOR READ IS UP
    233 001146  000000                  CLOCK:  .WORD 0                         ;FLAGWORD :0=INITIAL STATE,1=CLOCK IS
    234                                                                         ;PRESENT,2=CLOCK IS ABSENT
    235 001150                          T1:     .BLKW 2                         ;STORAGE AREA FOR INITIAL TIME
    236 001154                          T2:     .BLKW 2                         ;STORAGE AREA FOR SUBSEQUENT .GTIMS
    237 001160                          TIMA1:                                  ;TIMA1 AND TIMA2 ARE 8 BYTE AREAS
    238 001160                                  .BLKB 6                         ;WHERE ASCII TIME IS STORED IN THE
    239 001166                          SEC1:   .BLKB 2                         ;TIME SUBROUTINE. SEC1 AND SEC2 ARE
    240 001170                          TIMA2:                                  ;COMPARED TO DETERMINE IF 1 OR MORE
    241 001170                                  .BLKB 6                         ;SECONDS HAVE PASSED SINCE THE READ
    242 001176                          SEC2:   .BLKB 2                         ;FROM THE TERMINAL WAS STARTED.
    243                                 .IFDF   $MESG
    244 001200     124     150     145  NOCLCK: .ASCIZ/THERE IS NO CLOCK/
    245                                         .EVEN
    246 001222     124     150     145  YCLOCK: .ASCIZ/THERE IS A CLOCK/
    247                                         .EVEN
    248                                 .ENDC
    249 001244                          AREA:   .BLKW 2                         ;.GTIM AREA
    250 001250                          PARM:
    251 001250  000001                          .WORD 1                         ;HIGH BYTE=0, LOW BYTE=ARGUMENT COUNT
    252 001252  000000                          .WORD 0                         ;EITHER TIMA1 OR TIMA2 IS LOADED HERE
    253                                 .IFDF   $MESG
    254 001254     126     124     065  VT50M:  .ASCIZ/VT50/
    255                                         .EVEN
    256 001262     126     124     065  VT50HM: .ASCIZ/VT50H/
    257                                         .EVEN
    258 001270     126     124     065  VT50CM: .ASCIZ/VT50H WITH COPIER/
    259                                         .EVEN
    260 001312     126     124     065  VT52M:  .ASCIZ/VT52/
    261                                         .EVEN
    262 001320     126     124     065  VT52CM: .ASCIZ/VT52 WITH COPIER/
    263                                         .EVEN
    264 001342     126     124     065  VT55M:  .ASCIZ/VT55/
    265                                         .EVEN
    266 001350     126     124     061  VT152M: .ASCIZ/VT100 IN VT52 MODE/
    267                                         .EVEN
    268 001374     114     101     061  LA120M: .ASCIZ/LA120/
    269                                         .EVEN
    270 001402     126     124     061  VT100M: .ASCIZ/VT100/
    271                                         .EVEN
    272 001410     126     124     061  VT102M: .ASCIZ/VT102/
    273                                         .EVEN
    274 001416     126     124     061  VT125M: .ASCIZ/VT125/
    275                                         .EVEN
    276 001424     126     124     061  VR201M: .ASCIZ/VT100 CLASS TERMINAL/
    277                                         .EVEN
    278 001452     126     124     062  VR202M: .ASCIZ/VT200 CLASS TERMINAL/
    279                                         .EVEN
    280 001500     126     124     061  VT131M: .ASCIZ/VT131/
    281                                         .EVEN
    282 001506     126     124     061  VT132M: .ASCIZ/VT132/
    283                                         .EVEN
    284 001514     114     101     063  LA34M:  .ASCIZ/LA34/
    285                                         .EVEN
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 4-5


    286 001522     114     101     061  LA100M: .ASCIZ/LA100/
    287                                         .EVEN
    288 001530     114     101     061  LA12M:  .ASCIZ/LA12/
    289                                         .EVEN
    290 001536     074     125     116  UNKNWN: .ASCIZ/<UNKNOWN>/
    291                                 .ENDC
    292         000000'                         .END START
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03  PAGE 4-6
SYMBOL TABLE

ANSCHK  000104R         LCBIT = 040000          TABL1   000770R         VT100   000474R         VT50HM  001262R
AREA    001244R         MASK  = 050100          TABL2   001026R         VT100M  001402R         VT50M   001254R
CLOCK   001146R         MSG     001110R         TCBIT$= 000100          VT102   000512R         VT52    000374R
CRLF    000714R         NOCHAR  000314R         TIMA1   001160R         VT102M  001410R         VT52C   000412R
ERR$  = 000004          NOCLCK  001200R         TIMA2   001170R         VT125   000564R         VT52CM  001320R
EXIT    000210R         OUTQRY  000264R         TIME  = ****** G        VT125M  001416R         VT52M   001312R
INRPLY  000304R         OUTSTR  000262R         TIMOUT  001144R         VT131   000602R         VT55    000430R
INSTR   000300R         PARM    001250R         TTSPC$= 010000          VT131M  001500R         VT55M   001342R
JSW   = 000044          QUERY1  000676R         T1      001150R         VT132   000620R         WARN$ = 000002
LA100   000646R         QUERY2  000702R         T2      001154R         VT132M  001506R         YCLOCK  001222R
LA100M  001522R         REPLY   000720R         UNKNWN  001536R         VT152   000446R         $MESG = 000001
LA12    000666R         SAFETY  001104R         USERRB= 000053          VT152M  001350R         .AUDIT  107123 G
LA12M   001530R         SEC1    001166R         VR201   000530R         VT50    000322R         .TERMI  000003 G
LA120   000636R         SEC2    001176R         VR201M  001424R         VT50CM  001270R         ...V1 = 000003
LA120M  001374R         SETANS  000710R         VR202   000546R         VT50H   000340R         ...V5 = 000110
LA34    000656R         START   000000R         VR202M  001452R         VT50HC  000356R         ...V6 = 000002
LA34M   001514R

. ABS.  000000    000   (RW,I,GBL,ABS,OVR)
        001550    001   (RW,I,LCL,REL,CON)
ERRORS DETECTED:  0

*** ASSEMBLER STATISTICS


WORK  FILE  READS: 11
WORK  FILE WRITES: 11
SIZE OF WORK FILE: 10449 WORDS  ( 41 PAGES)
SIZE OF CORE POOL: 9728 WORDS  ( 38 PAGES)
OPERATING  SYSTEM: RT-11

ELAPSED TIME: 00:00:00.05
DK:IVP,SY:IVP/C=DL1:IVP

TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03 PAGE S-1
CROSS REFERENCE TABLE (CREF V05.03)


$MESG    3-14#    3-59     3-68     4-11     4-19     4-27     4-35     4-43     4-51     4-61     4-69     4-77     4-85     4-93  
         4-101    4-109    4-117    4-124    4-131    4-138    4-145    4-228    4-243    4-253 
...V1    3-20     3-87  
...V5    1-2#  
...V6    1-2      1-2      1-2#  
.AUDIT   1-2#  
.TERMI   1-2#  
ANSCHK   3-27     3-36# 
AREA     3-20     4-249#
CLOCK    4-233#
CRLF     3-75     4-172#
ERR$     3-8#  
EXIT     3-65#    4-16     4-24     4-32     4-40     4-48     4-56     4-66     4-74     4-82     4-90     4-98     4-106    4-114 
         4-122    4-129    4-136    4-143    4-150 
INRPLY   3-97#    3-101    3-104 
INSTR    3-25     3-40     3-95# 
JSW      3-9#     3-21*    3-78* 
LA100    4-130#   4-209 
LA100M   4-132    4-286#
LA12     4-144#   4-211 
LA120    4-123#   4-221 
LA120M   4-125    4-268#
LA12M    4-146    4-288#
LA34     4-137#   4-223 
LA34M    4-139    4-284#
LCBIT    3-10#    3-13  
MASK     3-13#    3-21     3-78  
MSG      3-71     4-229#
NOCHAR   3-99     3-102#
NOCLCK   4-244#
OUTQRY   3-86#    3-89  
OUTSTR   3-23     3-38     3-67     3-72     3-74     3-76     3-84#    4-60  
PARM     4-250#
QUERY1   3-22     4-152#
QUERY2   3-37     4-167#
REPLY    3-24     3-26     3-28     3-39     3-41     3-42     4-173#
SAFETY   3-66     4-226#
SEC1     4-239#
SEC2     4-242#
SETANS   4-59     4-170#
START    3-19#    4-292 
T1       3-20     4-235#
T2       4-236#
TABL1    3-29     4-180#
TABL2    3-44     4-202#
TCBIT$   3-12#    3-13  
TIMA1    4-237#
TIMA2    4-240#
TIME     3-2   
TIMOUT   4-232#
TTSPC$   3-11#    3-13  
UNKNWN   3-60     4-290#
USERRB   3-6#     3-58*    4-10*    4-18*    4-26*    4-34*    4-42*    4-50*    4-58*    4-68*    4-76*    4-84*    4-92*    4-100*
         4-108*   4-116*
VR201    4-83#    4-203 
VR201M   4-86     4-276#
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03 PAGE S-2
CROSS REFERENCE TABLE (CREF V05.03)


VR202    4-91#    4-205 
VR202M   4-94     4-278#
VT100    4-67#    4-213 
VT100M   4-70     4-270#
VT102    4-75#    4-217 
VT102M   4-78     4-272#
VT125    4-99#    4-207 
VT125M   4-102    4-274#
VT131    4-107#   4-219 
VT131M   4-110    4-280#
VT132    4-115#   4-215 
VT132M   4-118    4-282#
VT152    4-57#    4-193 
VT152M   4-62     4-266#
VT50     4-9#     4-181 
VT50CM   4-28     4-258#
VT50H    4-17#    4-183 
VT50HC   4-25#    4-185 
VT50HM   4-20     4-256#
VT50M    4-12     4-254#
VT52     4-33#    4-187 
VT52C    4-41#    4-189 
VT52CM   4-44     4-262#
VT52M    4-36     4-260#
VT55     4-49#    4-191 
VT55M    4-52     4-264#
WARN$    3-7#     3-58     4-10     4-18     4-26     4-34     4-42     4-50     4-58     4-68     4-76     4-84     4-92     4-100 
         4-108    4-116 
YCLOCK   4-246#
TERMID  - DETERMINE CONSOLE TYP MACRO V05.03B WEDNESDAY 16-JUN-99 00:03 PAGE M-1
CROSS REFERENCE TABLE (CREF V05.03)


...CM2   3-20  
...CM5   3-20     3-87  
...CM6   3-20  
.AUDIT   1-2#  
.EXIT    3-1#     3-79  
.GTIM    3-1#     3-20  
.MODUL   1-1#     1-2   
.MRKT    3-1#  
.NLCSI   1-2#  
.PRINT   3-1#  
.QSET    3-1#  
.RCTRL   3-1#     3-85  
.RMODU   1-2#  
.TTINR   3-1#     3-98  
.TTYOU   3-1#     3-87  
RT-11 LINK  V08.10      LOAD MAP        WEDNESDAY 16-JUN-99 00:03  PAGE 1
IVP   .SAV      TITLE:  TERMID  IDENT:  V05.03  

SECTION  ADDR   SIZE    GLOBAL  VALUE   GLOBAL  VALUE   GLOBAL  VALUE

 . ABS.  000000 001000 = 256.   WORDS  (RW,I,GBL,ABS,OVR)
                        .ISPY   000001  .TIME   000002  .TIMAS  000002  
                        .DIV60  000002  .TERMI  000003  $SYSV$  000020  
                        .SYSLB  000020  .AUDIT  107123  
         001000 001550 = 436.   WORDS  (RW,I,LCL,REL,CON)
 SYS$I   002550 000256 = 87.    WORDS  (RW,I,LCL,REL,CON)
                        TIME    002550  TIMASC  002612  $DIVTK  002712  
                        $DIV60  002740  ISPY    003004  $GVAL   003010  
 SYS$S   003026 000004 = 2.     WORDS  (RW,D,LCL,REL,CON)
                        $SYSLB  003026  $LOCK   003030  $CRASH  003031  

TRANSFER ADDRESS = 001000, HIGH LIMIT = 003030 = 780.   WORDS
